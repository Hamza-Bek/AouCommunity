@page "/chat"
@using Microsoft.IdentityModel.Tokens
@inject SelectedUserState _SelectedUserState

<div class="main-container">
    <div class="second-container">
        <div class="navbar-container" id="navbar">
            <a href="/" style="color: #ffffff; text-decoration: none;">
                <i class="fa-solid fa-house"></i>
            </a>
            <div class="line"></div>
            <i @onclick='() => ShowPage("myContactsPage")' class="fa-solid fa-address-book" style="color: #ffffff;"></i>
            <div class="line"></div>
            <i @onclick='() => ShowPage("newContactsPage")'class="fa-solid fa-users" style="color: #ffffff;"></i>
            <div class="line"></div>
            <i @onclick='() => ShowPage("notificationsPage")' class="fa-solid fa-bell" style="color: #ffffff;"></i>    

        </div>

        <div class="contact-container" id="contact">
            @if (currentPage == "myContactsPage")
            {
                <MyContactsPage />
            }
            else if (currentPage == "newContactsPage")
            {
                <NewContactsPage />
            }
            else if (currentPage == "notificationsPage")
            {
                <NotificationPage />
            }
        </div>
        @if (!string.IsNullOrEmpty(_SelectedUserState.ReceiverId))
        {
            <div class="chat-container" id="chat">
                <ChatPage ReceiverId="_receiverId"/>
                </div>
        }
        else
        {   
            <div class="chat-container-unselected">
                <div class="unselected-message">
                    <p>Select a contact to chat...</p>
                </div>
            </div>
        }
        
    </div>
</div>


@code {
    private string _receiverId;

    private string currentPage = "newContactsPage"; // Default page

    private void ShowPage(string page)
    {
        currentPage = page;
    }
    
    protected override void OnInitialized()
    {
        _SelectedUserState.OnChange += StateHasChanged;
    }

    private void Dispose()
    {
        _SelectedUserState.OnChange -= StateHasChanged;
    }
}